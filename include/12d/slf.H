#ifndef slf_H_included
#define slf_H_included

{
  Text    spacer   = "\t";
  Text    new_line = "\n";
  Integer pad = 0;
}

Text get_pad()
// --------------------------------------------------------------------
// --------------------------------------------------------------------
{
  Text P;

  for(Integer i=1;i<=pad;i++) {
    P += " ";
  }
  return(P);
}
Text indent()
// --------------------------------------------------------------------
// --------------------------------------------------------------------
{
  Text P = get_pad();
  pad += 2;
  return(P);
}
Text outdent()
// --------------------------------------------------------------------
// --------------------------------------------------------------------
{
  pad -= 2;
  Text P = get_pad();
  return(P);
}
Text quote(Text text)
// --------------------------------------------------------------------
// --------------------------------------------------------------------
{
  Text q = "\"";

  return(q + text + q);
}
Text field(Text name,Text value)
// --------------------------------------------------------------------
// --------------------------------------------------------------------
{
  return(get_pad() + "Field" + spacer + quote(name) + spacer + quote(value) + new_line);
}
Text field(Text prefix,Text name,Text value)
// --------------------------------------------------------------------
// --------------------------------------------------------------------
{
  return(get_pad() + "Field" + spacer + quote(prefix + " - " + name) + spacer + quote(value) + new_line);
}
Text group(Text name,Text value)
// --------------------------------------------------------------------
// --------------------------------------------------------------------
{
  return(indent() + name + spacer + quote(value) + " {" + new_line);
}
Text group(Text prefix,Text name,Text value)
// --------------------------------------------------------------------
// --------------------------------------------------------------------
{
  return(indent() + name + spacer + quote(prefix + " - " + value) + " {" + new_line);
}
Text group()
// --------------------------------------------------------------------
// --------------------------------------------------------------------
{
  return(outdent() + "}" + new_line);
}


#endif